{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","isReversed","sortType","visibleGoods","sort","item1","item2","ALPHABET","localeCompare","LENGTH","length","reverse","App","useState","setIsReversed","NONE","setSortType","className","type","onClick","current","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,0DAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UASK,SAASC,EACdC,EACAC,EACAC,GAEA,IAAMC,EAAY,YAAOH,GAkBzB,OAhBAG,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQJ,GACN,KAAKL,EAASU,SACZ,OAAOF,EAAMG,cAAcF,GAC7B,KAAKT,EAASY,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAITT,GACFE,EAAaQ,UAGRR,G,SA7BJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAgCE,IAAMe,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOZ,EAAP,KAAmBa,EAAnB,KACA,EAAgCD,mBAAShB,EAASkB,MAAlD,mBAAOb,EAAP,KAAiBc,EAAjB,KAmBA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBf,IAAaL,EAASU,UAAY,YAC/DY,QAvBe,WACrBH,EAAYnB,EAASU,WAmBjB,iCAQA,wBACEW,KAAK,SACLD,UAAS,4BAAuBf,IAAaL,EAASY,QAAU,YAChEU,QA3Ba,WACnBH,EAAYnB,EAASY,SAuBjB,4BAQA,wBACES,KAAK,SACLD,UAAS,6BAAwBhB,GAAc,YAC/CkB,QA/BQ,WACdL,GAAc,SAAAM,GAAO,OAAKA,MA2BtB,sBAQEnB,GAAcC,IAAaL,EAASkB,OACpC,wBACEG,KAAK,SACLD,UAAU,4BACVE,QApCI,WACZL,GAAc,GACdE,EAAYnB,EAASkB,OA+Bf,sBAUJ,6BACE,6BACGhB,EAAkBD,EAAiBG,EAAYC,GAC7CmB,KAAI,SAAAC,GAAI,OACP,oBAAe,UAAQ,OAAvB,SACGA,GADMA,cC7GvBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.af60063f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nexport function getReorderedGoods(\n  goods: string[],\n  isReversed: boolean,\n  sortType: SortType,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((item1, item2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return item1.localeCompare(item2);\n      case SortType.LENGTH:\n        return item1.length - item2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const sortByAlphabet = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const reverse = () => {\n    setIsReversed(current => !current);\n  };\n\n  const reset = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${sortType !== SortType.ALPHABET && 'is-light'}`}\n          onClick={sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${sortType !== SortType.LENGTH && 'is-light'}`}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${!isReversed && 'is-light'}`}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {(isReversed || sortType !== SortType.NONE) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {getReorderedGoods(goodsFromServer, isReversed, sortType)\n            .map(good => (\n              <li key={good} data-cy=\"Good\">\n                {good}\n              </li>\n            ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}